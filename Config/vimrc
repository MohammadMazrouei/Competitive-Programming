" options
set number
set relativenumber
set scrolloff=10

set shiftwidth=4
set tabstop=4
set softtabstop=4
set expandtab

set autoindent
set smartindent

set ignorecase
set smartcase

set nohlsearch
set incsearch

set splitkeep=screen
set splitright
set splitbelow

set noswapfile

set updatetime=50
set timeoutlen=300

" highlight the line number of the cursor
set cursorline
set cursorlineopt=number

" disable cursor-styling
set guicursor=""
set mouse=a

set termguicolors

set ruler

set cino+=(s 

set nocompatible

syntax on
filetype indent on 


" mappings
let mapleader = ' '
let maplocalleader = ' '

" better up/down
nnoremap <C-u> <C-u>zz
nnoremap <C-d> <C-d>zz
nnoremap <C-b> <C-b>zz
nnoremap <C-f> <C-f>zz

" window movements
nnoremap <C-k> <C-w>k
nnoremap <C-j> <C-w>j
nnoremap <C-h> <C-w>h
nnoremap <C-l> <C-w>l
nnoremap <C-c> <C-w>c

" system clipboard
nnoremap <Leader>y "+y
vnoremap <Leader>y "+y
nnoremap <Leader>Y "+y$

nnoremap <Leader>p "+p
vnoremap <Leader>p "+p
nnoremap <Leader>P "+P
vnoremap <Leader>P "+P

" delete
nnoremap <Leader>d "_d
vnoremap <Leader>d "_d

" line movement
vnoremap J :m '>+1<CR>gv=gv
vnoremap K :m '<-2<CR>gv=gv

" personal
inoremap jk <Esc>
nnoremap <Leader>w :w<CR>
nnoremap <Leader>q :q<CR>
nnoremap <Leader>i <C-i>
nnoremap <Leader>o <C-o>
nnoremap <Leader>r <C-r>
nnoremap <Leader>a ggVG
inoremap {<CR> {<CR>}<Esc>O

nnoremap J mzJ`z 
nnoremap n nzzzv 
nnoremap N Nzzzv 

nnoremap - :Ex<CR>
nnoremap <Leader>s :%s/\<<C-r><C-w>\>/<C-r><C-w>/gI<Left><Left><Left>

nnoremap <Leader>; :2wincmd c<CR>


" autocmds
" compile and run
set makeprg=g++\ -static\ -DDEBUG\ -lm\ -s\ -x\ c++\ -Wall\ -Wextra\ -O2\ -std=c++20\ -o\ %:r\ %
" set makeprg=g++\ -static\ -DDEBUG\ -lm\ -s\ -x\ c++\ -O2\ -std=c++20\ -o\ %:r\ %
autocmd filetype cpp nnoremap <space>9 :w <bar> Make <cr>
autocmd filetype cpp nnoremap <space>2 :!xsel -b > in<cr><cr>
autocmd filetype cpp nnoremap <space>3 :bel vert term ++shell ++cols=50 printf '\e[1;32m' && cat in && printf '\n____________________\n\n\e[0m' && ./%:r < in<cr>  
autocmd filetype cpp nnoremap <space>4 :bel vert term ++shell ++cols=50 ./%:r<cr>
autocmd filetype python nnoremap <space>2 :!xsel -b > in <cr>
autocmd filetype python nnoremap <space>3 :w <bar> bel vert term ++shell ++cols=50 printf '\e[1;32m' && cat in && printf '\n____________________\n\n\e[0m' && python3 "%" < in<cr>
autocmd filetype python nnoremap <space>4 :w <bar> bel vert term ++shell ++cols=50 python3 "%"<cr>
autocmd filetype cpp,python nnoremap <space>5 :Test<cr>

set belloff=all
autocmd Vimleave * call system("echo -n $'" . escape(getreg(), "'") . "' | xsel -ib")


" plugins 
" curl -fLo ~/.vim/autoload/plug.vim && https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
" PlugInstall, PlugUpdate, PlugClean

call plug#begin()
Plug 'dracula/vim', { 'as': 'dracula' }
Plug 'octol/vim-cpp-enhanced-highlight'
Plug 'tpope/vim-dispatch'
Plug 'Sirver/ultisnips'
Plug 'searleser97/cpbooster.vim'
Plug 'KarimElghamry/vim-auto-comment'
call plug#end()

filetype plugin indent on

"theme
colorscheme dracula

let g:UltiSnipsExpandTrigger='<tab>'
let g:UltiSnipsJumpForwardTrigger='<tab>'
"let g:ultisnipsjumpforwardtrigger='<c-b>'
let g:UltiSnipsJumpBackwardTrigger='<s-tab>'
"let g:ultisnipsjumpbackwardtrigger='<c-z>'
let g:UltiSnipsEditSplit='vertical'


"run this command -> git clone git@github.com:vim-scripts/errormarker.vim.git
let &errorformat="%f:%l:%c: %t%*[^:]:%m,%f:%l: %t%*[^:]:%m," . &errorformat

"inline comment mapping
execute "set <M-a>=\ea"
vnoremap <silent><M-a> :AutoInlineComment<CR>
nnoremap <silent><M-a> :AutoInlineComment<CR>
"block comment mapping
execute "set <M-o>=\eo"
vnoremap <silent><M-o> :AutoBlockComment<CR>
nnoremap <silent><M-o> :AutoBlockComment<CR>

